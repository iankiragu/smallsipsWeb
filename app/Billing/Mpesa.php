<?php

namespace App\Billing;

use Illuminate\Support\Facades\Log;

class Mpesa
{
    private static $lipa_na_mpesa_passkey = 'bfb279f9aa9bdbcf158e97dd71a467cd2e0c893059b10f78e6b72ada1ed2c919';
    private static $business_shortcode = '174379'; // ? test credentials

    /**
     * Send STKPush process request to API
     *
     * @param string $timestamp format(yyyymmddhhiiss)
     * @param string $account_ref Used with M-Pesa PayBills.
     * @param string $transaction_desc A description of the transaction.
     * @param string $amount The amount to be transacted.
     * @param string $phone_number The MSISDN sending the funds.
     * @param string $callbackurl The url to where responses from M-Pesa will be sent to.
     * @return array
     */
    static function STKPush_processrequest($timestamp, $account_ref, $transaction_desc, $amount, $phone_number, $callbackurl)
    {
        $url = 'https://' . env('MPESA_SUBDOMAIN') . '.safaricom.co.ke/mpesa/stkpush/v1/processrequest';

        $access_token = self::generate_access_token();
        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL, $url);
        curl_setopt($curl, CURLOPT_HTTPHEADER, array('Content-Type:application/json', 'Authorization:Bearer ' . $access_token)); //setting custom header

        $curl_post_data = array(
            //Fill in the request parameters with valid values
            'BusinessShortCode' => self::$business_shortcode,
            'Password' => self::generate_mpesa_password($timestamp),
            'Timestamp' => $timestamp,
            'TransactionType' => 'CustomerPayBillOnline',
            'Amount' => $amount,
            'PartyA' => $phone_number,
            'PartyB' => self::$business_shortcode,
            'PhoneNumber' => $phone_number,
            'CallBackURL' => $callbackurl,
            'AccountReference' => $account_ref,
            'TransactionDesc' => $transaction_desc
        );

        Log::debug('Request Body',['body'=>$curl_post_data]);

        $data_string = json_encode($curl_post_data);

        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_POST, true);
        curl_setopt($curl, CURLOPT_POSTFIELDS, $data_string);

        if (config('app.env') === 'local') {
            curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 0);
            curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0);
        }
        $curl_response = curl_exec($curl);
        if (config('app.env') === 'local') Log::info($curl_response);
        return json_decode($curl_response);
    }

    /**
     * Generate access token for api interactions
     *
     * @return string $access_token
     */
    private static function generate_access_token()
    {
        $url = 'https://' . env('MPESA_SUBDOMAIN') . '.safaricom.co.ke/oauth/v1/generate?grant_type=client_credentials';

        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL, $url);
        $credentials = base64_encode(env('MPESA_CONSUMER_KEY') . ':' . env('MPESA_CONSUMER_SECRET'));
        curl_setopt($curl, CURLOPT_HTTPHEADER, array('Authorization: Basic ' . $credentials)); //setting a custom header
        curl_setopt($curl, CURLOPT_HEADER, false);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);

        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);

        $curl_response = curl_exec($curl);

        return json_decode($curl_response)->access_token;
    }

    /**
     * Password generated by base64 encoding the business shortcode,
     * lipa na mpesa passkey and timestamp
     *
     * @param string $timestamp In the format (yyyymmddhhiiss)
     * @return string
     */
    private static function generate_mpesa_password($timestamp)
    {
        return base64_encode(self::$business_shortcode . self::$lipa_na_mpesa_passkey . $timestamp);
    }

    /**
     * Use this function to confirm all transactions in callback routes
     *
     * @param boolean $status
     * @return void
     */
    static function finish_transaction($status = true)
    {
        header('Content-Type: application/json');
        $resultArray = $status === TRUE ?
            [
                "ResultDesc" => "Confirmation Service request accepted successfully",
                "ResultCode" => "0"
            ] :
            [
                "ResultDesc" => "Confirmation Service not accepted",
                "ResultCode" => "1"
            ];
        echo json_encode($resultArray);
    }

    /**
     * Use this function to get callback data posted in callback routes
     *
     * @return object
     */
    static function get_data_from_callback()
    {
        $callbackJSONData = file_get_contents('php://input');
        return json_decode($callbackJSONData);
    }

    // Callbacks processing

    /**
     * Process STKPush request callback postdata from
     *
     * @param mixed $callback_response
     * @return object
     */
    static function process_stkpush_request_callback($callback_response)
    {
        if ($callback_response->Body->stkCallback->ResultCode === 0){
            $data = array(
                'ResultCode' => $callback_response->Body->stkCallback->ResultCode,
                'ResultDesc' => $callback_response->Body->stkCallback->ResultDesc,
                'MerchantRequestID' => $callback_response->Body->stkCallback->MerchantRequestID,
                'CheckoutRequestID' => $callback_response->Body->stkCallback->CheckoutRequestID,
                'Amount' => $callback_response->Body->stkCallback->CallbackMetadata->Item[0]->Value,
                'MpesaReceiptNumber'=>$callback_response->Body->stkCallback->CallbackMetadata->Item[1]->Value,
                'TransactionDate'=>$callback_response->Body->stkCallback->CallbackMetadata->Item[2]->Value,
                'PhoneNumber'=>$callback_response->Body->stkCallback->CallbackMetadata->Item[3]->Value
            );
            return (object) $data;
        }else{
            $data = array(
                'ResultCode' => $callback_response->Body->stkCallback->ResultCode,
                'ResultDesc' => $callback_response->Body->stkCallback->ResultDesc,
                'MerchantRequestID' => $callback_response->Body->stkCallback->MerchantRequestID,
                'CheckoutRequestID' => $callback_response->Body->stkCallback->CheckoutRequestID,
            );
            return (object) $data;
        }
    }

}
