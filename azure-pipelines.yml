# PHP
# Test and package your PHP project.
# Add steps that run tests, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/php

pool:
  vmImage: 'Ubuntu 16.04'

variables:
  phpVersion: 7.3

steps:
  - script: |
      sudo update-alternatives --set php /usr/bin/php$(phpVersion)
      sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
      sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
      sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
      sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
      php -version
    displayName: 'Use PHP version $(phpVersion)'

  - script: |
      curl -sL https://deb.nodesource.com/setup_11.x | sudo -E bash -
      sudo apt-get install -y build-essential debconf-utils screen nodejs mysql-server google-chrome-stable curl
      sudo apt-get install -y unzip xvfb autogen autoconf libtool pkg-config nasm
      sudo curl -s https://getcomposer.org/installer | php
      sudo mv composer.phar /usr/local/bin/composer
      sudo /etc/init.d/mysql start
    displayName: 'Installing System Dependencies'

  - script: |
      mysql --version
    displayName: 'MySQL Version'

  - script: |
      whereis .env
    displayName: 'Environment Setup'

  - script: |
      sudo composer self-update
      composer install --no-interaction --prefer-dist --no-suggest
      composer update
      composer --version
    displayName: 'Installing Package Dependencies'

  - script: |
      php artisan migrate --force
      php artisan passport:keys
      git add .
    displayName: 'Running Migrations'

  - script: |
      sudo npm i -g npm
      sudo chown -R vsts:vsts ~/.npm
      sudo chown -R vsts:vsts ~/.config
      npm install
      npm run prod
      node -v
    displayName: 'Generating build assets'

  - script: |
      git add .
    displayName: 'Persisting the changes'

  - script: |
      screen -d -m google-chrome-stable --headless --disable-gpu --disable-dev-shm-usage --disable-software-rasterizer --remote-debugging-port=9222 http://localhost &
      screen -d -m php artisan serve &
    displayName: 'Starting Chrome and the Web Server'
